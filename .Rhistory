installed.packages("tidyverse")
install.packages("tidyverse")
DADOS = read.csv("C:/Users/patym/OneDrive/Área de Trabalho/cell/cellphones.csv")
View(DADOS)
list.of.packages <- c("EnvStats", "freedom","BAT","readxl","writexl","rstudioapi","here","fitdistrplus","mc2d")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#### Carregando os pacotes ####----
install.packages("pacman")
install.packages("pacman")
pacman::p_load(readxl,ggplot2, dplyr,showtext,tidyverse,scales, formattable, tibble, infer, readxl,janitor, ggcorrplot, knitr,showtext, kableExtra, data.table,showtext)
#### Carregando os pacotes ####----
remove.packages("pacman")
pacman::p_load(readxl,ggplot2, dplyr,showtext,tidyverse,scales, formattable, tibble, infer, readxl,janitor, ggcorrplot, knitr,showtext, kableExtra, data.table,showtext)
#### Carregando os pacotes ####----
remove.packages("pacman")
#### Carregando os pacotes ####----
install.packages("pacman")
install.packages("pacman")
pacman::p_load(readxl,ggplot2, dplyr,showtext,tidyverse,scales, formattable, tibble, infer, readxl,janitor, ggcorrplot, knitr,showtext, kableExtra, data.table,showtext)
pacman::p_load(readxl,ggplot2, dplyr,showtext,tidyverse,scales, formattable, tibble, infer, readxl,janitor, ggcorrplot, knitr,showtext, kableExtra, data.table,showtext)
library(tidyverse)
library(vctrs)
install.packages("vctrs")
10%%2
3+4
1+1
MYK_animal_favorito<-c("gato")
rm(MYK_animal_favorito)
#install.packages("ggplot")
install.packages("abind")
remove.packages("abind")
remove.packages(abind)
library(ggplot2)
library(ggplot2)
nomes<-c("Daniel","Marina","Vitor","Luisa","Davi") ")
nomes<-c("Daniel","Marina","Vitor","Luisa","Davi") ")
idades<-c(19,18,22,17,19)
est_estudantes<-c(T,T,F,T,F)
Df <- data.frame(nomes,idades,est_estudantes)
DF <- data_frame(nomes,idades,est_estudantes)
Df <- data.frame(nomes,idades,est_estudantes)
nomes<-c("Daniel","Marina","Vitor","Luisa","Davi")
DF <- data_frame(nomes,idades,est_estudantes)
Df <- data.frame(nomes,idades,est_estudantes)
install.packages("esquisse")
library(esquisse)
esquisser(DF)
esquisser(DF)
esquisser(DF)
library(esquisse)
install.packages("esquisse")
install.packages("esquisse")
library(esquisse)
remotes::install_github("dreamRS/esquisse")
library(esquisse)
esquisser(DF)
esquisser(Df)
pacman::p_load(read.csv, tidyverse, ggplot2, readxl,dplyr,lubridate, nortest)
pacman::p_load(read.csv, tidyverse, ggplot2, readxl,dplyr,lubridate, nortest,scales)
library(pacman)
### CARREGANDO OS DADOS ###----
setwd("C:/Users/patym/OneDrive/Área de Trabalho/IEE_CIS")
freedom = read_excel("freedom.xlsx")
GERAL = read_excel("geral.xlsx")
MEDALS = read_excel("medals.xlsx")
HAPINESS = read_excel("hapiness.xlsx")
### PADRONIZACAO ###---
cores <- c("#A11D21", "#003366", "#CC9900", "#663333", "#FF6600", "#CC9966", "#999966", "#006606", "#008091", "#041835", "#666666")
theme_padra <- function(...) {
theme <- ggplot2::theme_bw() +
ggplot2::theme(
axis.title.y = ggplot2::element_text(colour = "black", size = 12),
axis.title.x = ggplot2::element_text(colour = "black", size = 12),
axis.text = ggplot2::element_text(colour = "black", size = 9.5),
panel.border = ggplot2::element_blank(),
axis.line = ggplot2::element_line(colour = "black"),
legend.position = "top",
...
)
return(
list(
theme,
scale_fill_manual(values = cores),
scale_colour_manual(values = cores)
)
)
}
colnames(MEDALS) <- c("Países","Bronze","Prata","Ouro","Total","Ranking por total","Total_Medalhas","Pontuação")
# Calcula a pontuacao total das medalhas
MEDALS$Pontuacao1 <- (MEDALS$Bronze) + (MEDALS$Prata * 2) + (MEDALS$Ouro *3)
# Ordena os dados pelo total de medalhas em ordem decrescente
dados_ranking1 <- MEDALS %>%
arrange(desc(Pontuacao1))
### QUESTAO 02 ###---
MEDALS <- subset(MEDALS, select = -...7) #removendo uma coluna, que so tem observacoes NA.
# Renomeando as colunas #
colnames(MEDALS) <- c("Países","Ouro","Prata","Bronze","Total","Ranking por total")
MEDALS$Ouro <- as.numeric(MEDALS$Ouro)
MEDALS = read_excel("medals.xlsx")
### QUESTAO 02 ###---
MEDALS <- subset(MEDALS, select = -...7) #removendo uma coluna, que so tem observacoes NA.
# Renomeando as colunas #
colnames(MEDALS) <- c("Países","Ouro","Prata","Bronze","Total","Ranking por total")
MEDALS$Ouro <- as.numeric(MEDALS$Ouro)
# Numero total de medalhas por pais
MEDALS$Total_Medalhas <- rowSums(MEDALS[, c("Ouro", "Prata", "Bronze")], na.rm = TRUE)
# Calcula a pontuacao total das medalhas
MEDALS$Pontuacao <- (MEDALS$Ouro * 3) + (MEDALS$Prata * 2) + MEDALS$Bronze
# Ordena os dados pelo total de medalhas em ordem decrescente
dados_ranking <- MEDALS %>%
arrange(desc(Pontuacao))
# Seleciona os dez primeiros países
dez_melhores_paises <- head(dados_ranking, 10)
## GRAFICO ##
ggplot(dez_melhores_paises) +
aes(x = fct_reorder(Países, Pontuacao, .desc=F), y = Pontuacao, label = Pontuacao) +
geom_bar(stat = "identity", fill = "#A11D21", width = 0.7) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.3, hjust = -0.2,
size = 2
) +
labs(x = "Países", y = "Número de medalhas") +
theme_padra() +
coord_flip()
colnames(MEDALS) <- c("Países","Bronze","Prata","Ouro","Total","Ranking por total","Total_Medalhas","Pontuação")
# Calcula a pontuacao total das medalhas
MEDALS$Pontuacao1 <- (MEDALS$Bronze) + (MEDALS$Prata * 2) + (MEDALS$Ouro *3)
# Ordena os dados pelo total de medalhas em ordem decrescente
dados_ranking1 <- MEDALS %>%
arrange(desc(Pontuacao1))
# Seleciona os dez primeiros países
dez_melhores_paises1 <- head(dados_ranking1, 10)
## GRAFICO ##
ggplot(dez_melhores_paises1) +
aes(x = fct_reorder(Países, Pontuacao1, .desc=F), y = Pontuacao1, label = Pontuacao1) +
geom_bar(stat = "identity", fill = "#A11D21", width = 0.7) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.3, hjust = -0.2,
size = 2
) +
labs(x = "Países", y = "Número de medalhas") +
theme_padra() +
coord_flip()
View(dados_ranking)
View(dados_ranking1)
View(dez_melhores_paises)
View(dez_melhores_paises1)
View(HAPINESS)
View(GERAL)
cor_infantilidade <- cor(GERAL$`Infant mortality (per 1000 births)`,GERAL$Deathrate)
## GRAFICO ##
ggplot(GERAL) +
aes(x = `Infant mortality (per 1000 births)`, y = GERAL$Deathrate) +
geom_point(colour = "#A11D21", size = 3) +
labs(
x = "Generosidade",
y = "Índice de Agricultura" )+
theme_padra()
cor_infantilidade <- cor.test(GERAL$`Infant mortality (per 1000 births)`,GERAL$Deathrate)
View(cor_infantilidade)
## GRAFICO ##
ggplot(GERAL) +
aes(x = `Infant mortality (per 1000 births)`, y = GERAL$Deathrate) +
geom_point(colour = "#A11D21", size = 3) +
labs(
x = "Índice de Natalidade",
y = "Índice de Mortalidade" )+
theme_padra()
### QUESTAO 13 ###----
#correlação entre a generosidade da população e o indice de agricultura dos paises
HAPINESS <- rename(HAPINESS, Country = Countryorregion)
GERAL_HAPI <- merge(GERAL, HAPINESS, by = "Country")
# Calcular a correlação entre generosidade e índice de agricultura
correlacao <- cor(GERAL_HAPI$Generosity, GERAL_HAPI$Agriculture) # é uma correlação fraca
## GRAFICO ##
ggplot(GERAL_HAPI) +
aes(x = Generosity, y = Agriculture) +
geom_point(colour = "#A11D21", size = 3) +
labs(
x = "Generosidade",
y = "Índice de Agricultura" )+
theme_padra()
View(GERAL)
View(freedom)
View(GERAL)
# Calculando a média de alfabetização por região
media_por_regiao <- aggregate(`Literacy (%)` ~ Region, data = GERAL, FUN = mean)
View(media_por_regiao)
# Criando o gráfico de barras
ggplot(data = media_por_regiao, aes(x = Region, y = `Literacy (%)`)) +
geom_bar(stat = "identity", fill = "#A11D21") +
labs(x = "Região", y = "Taxa de Alfabetização", title = "Média de Alfabetização por Região")
